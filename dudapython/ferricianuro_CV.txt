import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import glob

archivos = glob.glob("../data/CV_ferri/*")
def importa(archivo):
    ferri = pd.read_csv(archivo, index_col = 0, usecols = [0,2,5])
    return ferri
dataframes = []
for i in archivos:
    dataframes.append(importa(i))
for i in dataframes:    
    i.rename(columns ={"WE(1).Current (A)":"I_A","Index":"id"}, inplace = True)

velocidades = [10,20,50,100,150,200,250,300]

for ferri in dataframes:
    
    x_a = np.array(ferri.index[(ferri.id > 800)&(ferri.id < 950)])
    y_a = np.array(ferri.I_A[(ferri.id > 800)&(ferri.id < 950)])
    A_a = np.vstack([x_a, np.ones(len(x_a))]).T
    m_a, c_a = np.linalg.lstsq(A_a, y_a, rcond=None)[0]
    
    x_c = np.array(ferri.index[(ferri.id > 350)&(ferri.id < 466)])
    y_c = np.array(ferri.I_A[(ferri.id > 350)&(ferri.id < 466)])
    A_c = np.vstack([x_c, np.ones(len(x_c))]).T
    m_c, c_c = np.linalg.lstsq(A_c, y_c, rcond=None)[0]
    
    I_pa = ferri.I_A.max()
    I_pc = ferri.I_A.min()
    E_pc = ferri.index[ferri.I_A == I_pc].astype("float")
    E_pa = ferri.index[ferri.I_A == I_pa].astype("float")
    E_1_2 = ((E_pa + E_pc)/2).astype("float")
    I_pa_1_2 = (ferri.I_A.max() - (m_a*E_pa +c_a))/2
    #E_pa_1_2 = ferri.index[(ferri.I_A == np.round(I_pa_1_2,15))]
    I_pc_1_2 = (ferri.I_A.max() - (m_c*E_pc +c_c))/2
    
    
    w_a = np.array(ferri.index[(ferri.id > 520)&(ferri.id < 790)])
    w_c = np.array(ferri.index[(ferri.id > 40)&(ferri.id < 300)]) 
    
    
    
    fig, ax = plt.subplots(figsize = (12,6))
    
    ax.scatter(ferri.index,ferri.I_A,s = 3)
    ax.plot(w_a, m_a*w_a + c_a, 'r', label='Fitted line')
    ax.plot(w_c, m_c*w_c + c_c, 'r', label='Fitted line')
    
    ax.vlines(x = E_pc, ymin = -0.002, ymax = m_c*E_pc + c_c,
               colors = 'red')
    ax.vlines(x = E_pa, ymin = -0.002, ymax = I_pa,
           colors = 'red')
    ax.set_ylim((I_pc + 0.1*I_pc,I_pa + 0.1*I_pa))
    ax.set_xticks(np.arange(-0.3,1,0.1))
    ax.set_xlabel("Potencial [V]")
    ax.set_ylabel("Corriente [A]")
    #plt.title(f"Velocidad de barrido: {vel}")